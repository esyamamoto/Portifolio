{"ast":null,"code":"var _jsxFileName = \"/home/mewpi/Projetos/Code/meuportifolio/src/components/Competence.js\";\nimport React, { useState } from 'react';\nimport '../styles/Competence.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst competenceData = [{\n  id: 1,\n  title: 'Front-End',\n  description: 'Requisições a APIs |  React com Typescript | JavaScript, HTML & CSS | Testes automatizados com React Testing Library | CSS Modules | Context API | Postman | Cypress | Bootstrap',\n  additionalDescription: 'Trabalhei com requisições a APIs para consumir e enviar dados de maneira eficiente, utilizando React com TypeScript para construir interfaces interativas e escaláveis. Minha experiência inclui o uso de JavaScript, HTML e CSS para criar layouts responsivos e funcionais. Implementei testes automatizados com React Testing Library para garantir a qualidade do código e a funcionalidade dos componentes. Utilizei CSS Modules para escopo local de estilos e Context API. Ferramentas como Postman e Cypress foram fundamentais para testar e validar as APIs e o comportamento do aplicativo. '\n}, {\n  id: 2,\n  title: 'Back-End',\n  description: 'Java | Spring | Python |   Node.js | Express.JS |  ORM |  Docker |  Testes Unitários |  Testes de Integração |  Banco de dados - SQL : MySQL e PostgreSQL | ORM : Sequelize | Deploy | Postman | Cypress',\n  additionalDescription: 'Trabalhei com Java e Spring para construir aplicações escaláveis e seguras, e com Python para soluções rápidas e eficientes. No ambiente Node.js e Express.JS, desenvolvi APIs e serviços que se comunicam com o front-end e manipulam dados de forma eficaz. A experiência com ORM e Docker facilitou o gerenciamento de dados e o isolamento de ambientes de desenvolvimento. Realizei testes unitários e de integração para assegurar a robustez do código e a integração entre componentes. Utilize bancos de dados SQL, como MySQL e PostgreSQL, e ORM, como Sequelize, para gerenciar e consultar dados. Também estive envolvido em práticas de deploy e validação com Postman e Cypress, garantindo a entrega contínua e a qualidade das aplicações.'\n}, {\n  id: 3,\n  title: 'Comunicação e trabalho em equipe',\n  description: 'Git & Github |  Miro | Trello (Kanban + Scrum)',\n  additionalDescription: 'No âmbito da comunicação e colaboração, estou habituado ao uso de Git & GitHub para controle de versões e colaboração em projetos. Utilizei Miro para brainstorms e visualização de fluxos de trabalho, facilitando a colaboração e o planejamento. Com o Trello, implementei metodologias ágeis como Kanban e Scrum para gerenciar tarefas e sprints, otimizando a produtividade da equipe e garantindo a entrega contínua de valor.'\n}];\nconst Competence = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"competence\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Habilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: competenceData.map(competence => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: competence.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: competence.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: competence.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additionalDesc\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `additionalDescription ${expandedId === competence.id ? 'expanded' : 'collapsed'}`,\n            children: competence.additionalDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, competence.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = Competence;\nexport default Competence;\nvar _c;\n$RefreshReg$(_c, \"Competence\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","competenceData","id","title","description","additionalDescription","Competence","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","competence","icon","expandedId","_c","$RefreshReg$"],"sources":["/home/mewpi/Projetos/Code/meuportifolio/src/components/Competence.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Competence.css';\n\nconst competenceData = [\n  {\n    id: 1,\n    title: 'Front-End',\n    description: \n    'Requisições a APIs |  React com Typescript | JavaScript, HTML & CSS | Testes automatizados com React Testing Library | CSS Modules | Context API | Postman | Cypress | Bootstrap', \n    additionalDescription: \n    'Trabalhei com requisições a APIs para consumir e enviar dados de maneira eficiente, utilizando React com TypeScript para construir interfaces interativas e escaláveis. Minha experiência inclui o uso de JavaScript, HTML e CSS para criar layouts responsivos e funcionais. Implementei testes automatizados com React Testing Library para garantir a qualidade do código e a funcionalidade dos componentes. Utilizei CSS Modules para escopo local de estilos e Context API. Ferramentas como Postman e Cypress foram fundamentais para testar e validar as APIs e o comportamento do aplicativo. ',\n  },\n  {\n    id: 2,\n    title: 'Back-End',\n    description: \n    'Java | Spring | Python |   Node.js | Express.JS |  ORM |  Docker |  Testes Unitários |  Testes de Integração |  Banco de dados - SQL : MySQL e PostgreSQL | ORM : Sequelize | Deploy | Postman | Cypress',\n    additionalDescription: \n    'Trabalhei com Java e Spring para construir aplicações escaláveis e seguras, e com Python para soluções rápidas e eficientes. No ambiente Node.js e Express.JS, desenvolvi APIs e serviços que se comunicam com o front-end e manipulam dados de forma eficaz. A experiência com ORM e Docker facilitou o gerenciamento de dados e o isolamento de ambientes de desenvolvimento. Realizei testes unitários e de integração para assegurar a robustez do código e a integração entre componentes. Utilize bancos de dados SQL, como MySQL e PostgreSQL, e ORM, como Sequelize, para gerenciar e consultar dados. Também estive envolvido em práticas de deploy e validação com Postman e Cypress, garantindo a entrega contínua e a qualidade das aplicações.',\n\n  },\n  {\n    id: 3,\n    title: 'Comunicação e trabalho em equipe',\n    description: \n    'Git & Github |  Miro | Trello (Kanban + Scrum)',\n    additionalDescription: \n    'No âmbito da comunicação e colaboração, estou habituado ao uso de Git & GitHub para controle de versões e colaboração em projetos. Utilizei Miro para brainstorms e visualização de fluxos de trabalho, facilitando a colaboração e o planejamento. Com o Trello, implementei metodologias ágeis como Kanban e Scrum para gerenciar tarefas e sprints, otimizando a produtividade da equipe e garantindo a entrega contínua de valor.',\n  },\n];\n\nconst Competence = () => {\n  return (\n    <section id=\"competence\">\n      <header>\n        <h2>Habilidades</h2>\n      </header>\n      <div className=\"cards\">\n        {competenceData.map((competence) => (\n          <div key={competence.id} className=\"card\">\n            <div className=\"icon\">{competence.icon}</div>\n            <h3>{competence.title}</h3>\n            <p className='description'>{competence.description}</p>\n            <div className='additionalDesc'>\n            <p className={`additionalDescription ${expandedId === competence.id ? 'expanded' : 'collapsed'}`}>\n                {competence.additionalDescription}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Competence;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,WAAW,EACX,kLAAkL;EAClLC,qBAAqB,EACrB;AACF,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,UAAU;EACjBC,WAAW,EACX,0MAA0M;EAC1MC,qBAAqB,EACrB;AAEF,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,kCAAkC;EACzCC,WAAW,EACX,gDAAgD;EAChDC,qBAAqB,EACrB;AACF,CAAC,CACF;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,oBACEN,OAAA;IAASE,EAAE,EAAC,YAAY;IAAAK,QAAA,gBACtBP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACTX,OAAA;MAAKY,SAAS,EAAC,OAAO;MAAAL,QAAA,EACnBN,cAAc,CAACY,GAAG,CAAEC,UAAU,iBAC7Bd,OAAA;QAAyBY,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACvCP,OAAA;UAAKY,SAAS,EAAC,MAAM;UAAAL,QAAA,EAAEO,UAAU,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7CX,OAAA;UAAAO,QAAA,EAAKO,UAAU,CAACX;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3BX,OAAA;UAAGY,SAAS,EAAC,aAAa;UAAAL,QAAA,EAAEO,UAAU,CAACV;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDX,OAAA;UAAKY,SAAS,EAAC,gBAAgB;UAAAL,QAAA,eAC/BP,OAAA;YAAGY,SAAS,EAAE,yBAAyBI,UAAU,KAAKF,UAAU,CAACZ,EAAE,GAAG,UAAU,GAAG,WAAW,EAAG;YAAAK,QAAA,EAC5FO,UAAU,CAACT;UAAqB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA,GAREG,UAAU,CAACZ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASlB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACM,EAAA,GAtBIX,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}