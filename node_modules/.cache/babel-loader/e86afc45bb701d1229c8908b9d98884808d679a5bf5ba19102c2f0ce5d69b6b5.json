{"ast":null,"code":"var _jsxFileName = \"/home/mewpi/Projetos/Code/meuportifolio/src/components/Competence.js\";\nimport React from 'react';\nimport '../styles/Competence.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst competenceData = [{\n  id: 1,\n  title: 'Front-End',\n  description: 'Requisições a APIs |  React com Typescript | JavaScript, HTML & CSS | Testes automatizados com React Testing Library | CSS Modules | Gerenciamento de estado com Redux | Context API | Postman | Cypress | Bootstrap',\n  additionalDescription: 'Trabalhei com requisições a APIs para consumir e enviar dados de maneira eficiente, utilizando React com TypeScript para construir interfaces interativas e escaláveis. Minha experiência inclui o uso de JavaScript, HTML e CSS para criar layouts responsivos e funcionais. Implementei testes automatizados com React Testing Library para garantir a qualidade do código e a funcionalidade dos componentes. Utilizei CSS Modules para escopo local de estilos e trabalhei com gerenciamento de estado usando Redux e Context API. Ferramentas como Postman e Cypress foram fundamentais para testar e validar as APIs e o comportamento do aplicativo. '\n}, {\n  id: 2,\n  title: 'Back-End',\n  description: 'Java | Spring | Python |   Node.js | Express.JS |  ORM |  Docker |  Testes Unitários |  Testes de Integração |  Banco de dados - SQL : MySQL e PostgreSQL | ORM : Sequelize | Deploy | Postman | Cypress',\n  additionalDescription: 'A maior parte da minha experiência com desenvolvimento back-end foi através do cuso da Trybe, onde desenvolvi projetos comNOde.Js e Express.js, integrando APIs, gerenciando requisicoes de forma otimizada.'\n}, {\n  id: 3,\n  title: 'Comunicação e trabalho em equipe',\n  description: 'Git & Github |  Miro | Trello (Kanban + Scrum)',\n  additionalDescription: 'A maior parte da minha experiencia com desenvolvimento front-end foi através do cuso da Trybe, onde lidei com diversos desafios e conclui projetos complexos, alcançando um nível intermediário de conhecimento.'\n}];\nconst Competence = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"competence\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Habilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: competenceData.map(competence => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: competence.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: competence.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: competence.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"additionalDescription\",\n          children: competence.additionalDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, competence.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = Competence;\nexport default Competence;\nvar _c;\n$RefreshReg$(_c, \"Competence\");","map":{"version":3,"names":["React","FontAwesomeIcon","jsxDEV","_jsxDEV","competenceData","id","title","description","additionalDescription","Competence","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","competence","icon","_c","$RefreshReg$"],"sources":["/home/mewpi/Projetos/Code/meuportifolio/src/components/Competence.js"],"sourcesContent":["import React from 'react';\nimport '../styles/Competence.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst competenceData = [\n  {\n    id: 1,\n    title: 'Front-End',\n    description: \n    'Requisições a APIs |  React com Typescript | JavaScript, HTML & CSS | Testes automatizados com React Testing Library | CSS Modules | Gerenciamento de estado com Redux | Context API | Postman | Cypress | Bootstrap', \n    additionalDescription: \n    'Trabalhei com requisições a APIs para consumir e enviar dados de maneira eficiente, utilizando React com TypeScript para construir interfaces interativas e escaláveis. Minha experiência inclui o uso de JavaScript, HTML e CSS para criar layouts responsivos e funcionais. Implementei testes automatizados com React Testing Library para garantir a qualidade do código e a funcionalidade dos componentes. Utilizei CSS Modules para escopo local de estilos e trabalhei com gerenciamento de estado usando Redux e Context API. Ferramentas como Postman e Cypress foram fundamentais para testar e validar as APIs e o comportamento do aplicativo. ',\n  },\n  {\n    id: 2,\n    title: 'Back-End',\n    description: \n    'Java | Spring | Python |   Node.js | Express.JS |  ORM |  Docker |  Testes Unitários |  Testes de Integração |  Banco de dados - SQL : MySQL e PostgreSQL | ORM : Sequelize | Deploy | Postman | Cypress',\n    additionalDescription: \n    'A maior parte da minha experiência com desenvolvimento back-end foi através do cuso da Trybe, onde desenvolvi projetos comNOde.Js e Express.js, integrando APIs, gerenciando requisicoes de forma otimizada.',\n  \n  },\n  {\n    id: 3,\n    title: 'Comunicação e trabalho em equipe',\n    description: \n    'Git & Github |  Miro | Trello (Kanban + Scrum)',\n    additionalDescription: \n    'A maior parte da minha experiencia com desenvolvimento front-end foi através do cuso da Trybe, onde lidei com diversos desafios e conclui projetos complexos, alcançando um nível intermediário de conhecimento.',\n  \n  },\n];\n\nconst Competence = () => {\n  return (\n    <section id=\"competence\">\n      <header>\n        <h2>Habilidades</h2>\n      </header>\n      <div className=\"cards\">\n        {competenceData.map((competence) => (\n          <div key={competence.id} className=\"card\">\n            <div className=\"icon\">{competence.icon}</div>\n            <h3>{competence.title}</h3>\n            <p className='description'>{competence.description}</p>\n            <p className='additionalDescription'>{competence.additionalDescription}</p>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Competence;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,WAAW,EACX,sNAAsN;EACtNC,qBAAqB,EACrB;AACF,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,UAAU;EACjBC,WAAW,EACX,0MAA0M;EAC1MC,qBAAqB,EACrB;AAEF,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,kCAAkC;EACzCC,WAAW,EACX,gDAAgD;EAChDC,qBAAqB,EACrB;AAEF,CAAC,CACF;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,oBACEN,OAAA;IAASE,EAAE,EAAC,YAAY;IAAAK,QAAA,gBACtBP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACTX,OAAA;MAAKY,SAAS,EAAC,OAAO;MAAAL,QAAA,EACnBN,cAAc,CAACY,GAAG,CAAEC,UAAU,iBAC7Bd,OAAA;QAAyBY,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACvCP,OAAA;UAAKY,SAAS,EAAC,MAAM;UAAAL,QAAA,EAAEO,UAAU,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7CX,OAAA;UAAAO,QAAA,EAAKO,UAAU,CAACX;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3BX,OAAA;UAAGY,SAAS,EAAC,aAAa;UAAAL,QAAA,EAAEO,UAAU,CAACV;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDX,OAAA;UAAGY,SAAS,EAAC,uBAAuB;UAAAL,QAAA,EAAEO,UAAU,CAACT;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJnEG,UAAU,CAACZ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACK,EAAA,GAlBIV,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}